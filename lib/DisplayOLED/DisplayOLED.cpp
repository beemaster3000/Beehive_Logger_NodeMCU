
#include "DisplayOLED.hpp"  


#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

static const unsigned char welcomeScreen[] U8X8_PROGMEM= 
{
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0x81, 0xFF, 0xFF, 0xFF, 0xFF, 0xC1, 
  0x20, 0x88, 0xE3, 0x78, 0x18, 0x08, 0x82, 0x0F, 0xFF, 0x7F, 0x00, 0xFC, 
  0xFF, 0xFF, 0xFF, 0x99, 0x3C, 0x8F, 0xE3, 0x38, 0x73, 0xCE, 0x33, 0x0F, 
  0xFF, 0x3F, 0xCE, 0xF0, 0xFF, 0xFF, 0xFF, 0x99, 0x3C, 0x0F, 0x61, 0x32, 
  0x7F, 0xCE, 0x33, 0x0F, 0xFF, 0x3F, 0xCF, 0xE0, 0xFF, 0xFF, 0xFF, 0xC1, 
  0x20, 0x08, 0x61, 0x32, 0x7C, 0x0E, 0x32, 0x0F, 0xFF, 0x1F, 0x1C, 0xC2, 
  0xFF, 0xFF, 0xFF, 0x99, 0x3C, 0x4F, 0x65, 0xF2, 0x70, 0xCE, 0x83, 0x0F, 
  0xFF, 0x1F, 0x18, 0x83, 0xFF, 0xFF, 0xFF, 0x99, 0x3C, 0x4F, 0x24, 0xE0, 
  0x73, 0xCE, 0x93, 0x0F, 0xFF, 0x9F, 0x01, 0x03, 0xFF, 0xFF, 0xFF, 0x99, 
  0x3C, 0x4F, 0x24, 0x27, 0x73, 0xCE, 0x33, 0x0F, 0xFF, 0x9F, 0x67, 0x02, 
  0xFE, 0xFF, 0xFF, 0xC1, 0x20, 0xC8, 0x26, 0x67, 0x78, 0x0E, 0x72, 0x0E, 
  0xFF, 0x1F, 0xE6, 0x00, 0xFC, 0xFF, 0x4F, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0x1F, 0x00, 0x90, 0xF8, 0xFF, 0x87, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0x3F, 0x03, 0x30, 
  0xF8, 0xFF, 0xE7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 
  0xFF, 0x3F, 0xE6, 0x61, 0xF0, 0xFF, 0xE7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0x7F, 0xE4, 0x4C, 0xF0, 0xFF, 0xF3, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0x60, 0x9E, 
  0xE0, 0xFF, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 
  0xFF, 0xFF, 0x01, 0x38, 0x01, 0xA1, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0xC3, 0x21, 0x00, 0x00, 0xF3, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x1F, 0x0E, 0x87, 0xC3, 0x0F, 0xFF, 0xFF, 0x0F, 0x0F, 
  0x00, 0x00, 0xF2, 0xFF, 0xFF, 0xFF, 0xFF, 0xCF, 0x64, 0x32, 0x99, 0x0F, 
  0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x07, 0xFA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0x64, 0x32, 0x99, 0x0F, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x3F, 0xF8, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0x64, 0x32, 0x99, 0x0F, 0xFF, 0xFF, 0x01, 0x00, 
  0x00, 0x7E, 0xF8, 0x07, 0xFE, 0xFF, 0xFF, 0x3F, 0x66, 0x32, 0x99, 0x0F, 
  0xFF, 0x01, 0x00, 0x00, 0x00, 0x7E, 0xFC, 0x01, 0xFC, 0xFF, 0xFF, 0xFF, 
  0x64, 0x32, 0x99, 0x0F, 0x0F, 0x80, 0x07, 0x00, 0x00, 0x7E, 0x1C, 0xF8, 
  0xFD, 0xFF, 0xFF, 0xFF, 0x64, 0x32, 0x99, 0x0F, 0x07, 0x3E, 0x00, 0x00, 
  0x00, 0xFC, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x64, 0x32, 0x99, 0x0F, 
  0x03, 0x00, 0x7E, 0x00, 0x00, 0xF8, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xCF, 
  0x64, 0x32, 0x99, 0x0F, 0x03, 0x1E, 0x07, 0x00, 0x00, 0xE0, 0xFC, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x1F, 0x0E, 0x87, 0xC3, 0x0F, 0xF3, 0x4E, 0x01, 0x00, 
  0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 
  0x63, 0x64, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x0F, 0x07, 0x70, 0x01, 0x00, 0x00, 0x04, 0xF8, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x07, 0x23, 0x00, 0x00, 
  0x00, 0xF8, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 
  0x0F, 0x08, 0x00, 0x00, 0x20, 0x18, 0xF9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x0F, 0x7F, 0x00, 0x00, 0x10, 0x72, 0x00, 0xE0, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0x3F, 0x01, 0x50, 
  0x60, 0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 
  0xFF, 0x3F, 0x08, 0x00, 0xE0, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0x1F, 0x20, 0x00, 0xE0, 0x23, 0xFC, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0x1F, 0x40, 0xC0, 
  0xE1, 0x3F, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 
  0xFF, 0x1F, 0x80, 0xF1, 0xC7, 0x7F, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0x3F, 0x00, 0xF0, 0x87, 0x7F, 0xF0, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0x5F, 0x00, 0xF0, 
  0x07, 0xFF, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 
  0xFF, 0x8F, 0x00, 0xF0, 0x0F, 0xFF, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0x0F, 0x07, 0xF0, 0x0F, 0xFF, 0xEF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0x0F, 0xF0, 0xE0, 
  0x3F, 0xFC, 0xFF, 0x07, 0xFF, 0xFF, 0xCF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 
  0xFF, 0x0F, 0x80, 0xE0, 0x3F, 0xFC, 0xFF, 0x67, 0xFE, 0xFF, 0xCF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0x1F, 0x80, 0xE0, 0x3F, 0xFC, 0xFF, 0xF3, 
  0xFC, 0xFF, 0xE7, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0x3F, 0x80, 0xE1, 
  0x3F, 0xF8, 0xFF, 0xF3, 0xFC, 0xF1, 0xE7, 0x67, 0x3E, 0xE7, 0xC7, 0x0F, 
  0xFF, 0x9F, 0xE3, 0xC1, 0x3F, 0xF8, 0xFF, 0xF3, 0xFC, 0xE4, 0xE7, 0x67, 
  0x7E, 0xF2, 0x93, 0x0F, 0xFF, 0x1F, 0xF8, 0xC1, 0xFF, 0xE0, 0xFF, 0xF3, 
  0x7C, 0xE6, 0xE7, 0x67, 0x7E, 0xF8, 0x99, 0x0F, 0xFF, 0x1F, 0xF8, 0xC1, 
  0xFF, 0xC3, 0xFF, 0xF3, 0x7C, 0xE0, 0xE7, 0x67, 0xFE, 0xFC, 0x81, 0x0F, 
  0xFF, 0x1F, 0xF8, 0xE1, 0xFF, 0x8F, 0xFF, 0x79, 0x7E, 0xFE, 0xF3, 0x33, 
  0x7F, 0xFC, 0xF9, 0x0F, 0xFF, 0x1F, 0xFC, 0xE1, 0xFF, 0x9F, 0xFF, 0x39, 
  0x7F, 0xE6, 0xF3, 0x13, 0x3F, 0xF9, 0x99, 0x0F, 0xFF, 0x3F, 0xFF, 0xE3, 
  0xFF, 0xFF, 0xFF, 0x81, 0xFF, 0xF0, 0xF3, 0x23, 0x9F, 0xF9, 0xC3, 0x0F, 
  0xFF, 0x3F, 0xFF, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 0x01, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0xFF, 0xFF, 0xFF, 0xFB, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 
  0xFF, 0xFF, 0xFF, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0xFF, 0xE3, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x0F, };
 
DisplayOLED::DisplayOLED()
{
    u8g2_ = U8G2_SSD1306_128X64_NONAME_1_HW_I2C(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);
}

DisplayOLED::~DisplayOLED()
{

}

void DisplayOLED::setup()
{   
    u8g2_.begin();
    // u8g2_.setFont(u8g2_font_helvR12_tr); // helvetica
    u8g2_.setFont(u8g2_font_helvB12_tr); // bold helvetica **
    // u8g2_.setFont(u8g2_font_crox3c_tr);  // add b after h or c for bold 
    // u8g2_.setFont(u8g2_font_crox3h_tr);  // add b after h or c for bold %
    // u8g2_.setFont(u8g2_font_crox1h_tr);  // add b after h or c for bold
    // u8g2_.setFont(u8g2_font_10x20_tr);
    // u8g2_.setFont(u8g2_font_helvR08_tr); // helvetica 8
}

void DisplayOLED::clear()
{   
    u8g2_.clear();
}


void DisplayOLED::drawWelcomeScreen()
{   
    u8g2_.firstPage(); 
    do 
    {
       u8g2_.drawXBMP( 0, 0,SCREEN_WIDTH, SCREEN_HEIGHT, welcomeScreen);
    } while( u8g2_.nextPage() );
}

void DisplayOLED::printTRHvalues(int short sensorNumber, float t, float h)
{     
    u8g2_.firstPage();
    do 
    {
        u8g2_.setCursor(0,15);
        u8g2_.print(F("Sensor : "));
        u8g2_.print(sensorNumber);
        u8g2_.setCursor(0,40);
        u8g2_.print(F("Temp: "));
        u8g2_.setCursor(65,40);
        u8g2_.print(t,1);
        u8g2_.print(F(" C"));
        u8g2_.setCursor(0,60);
        u8g2_.print(F("RH:"));
        u8g2_.setCursor(65,60);
        u8g2_.print(h,1);
        u8g2_.println(F(" %"));
    } while ( u8g2_.nextPage() );
}

void DisplayOLED::printMainPage(char filename[13],float battVolt,char dateTime[20])
{     
    u8g2_.firstPage();
    do 
    {
        u8g2_.setCursor(0,15);
        u8g2_.print(dateTime);
        u8g2_.setCursor(0,38);
        u8g2_.print(F("File: "));
        u8g2_.print(filename);
        u8g2_.setCursor(0,62);
        u8g2_.print(F("Batt Volt: "));
        u8g2_.print(battVolt,1);
        u8g2_.println(F(" V"));
    } while ( u8g2_.nextPage() );
}

void DisplayOLED::println(const char *textIn,int lineNumber)
{
    int lineht;  
    lineht = 12;
    u8g2_.setCursor(0,lineht*lineNumber);
    u8g2_.print(textIn);
    u8g2_.updateDisplay();
} 